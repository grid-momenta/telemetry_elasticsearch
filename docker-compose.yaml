version: '3.8'

services:
  search_guard:
    image: floragunncom/sgdemo
    container_name: te_search_guard
    ports:
      - "9210:9200"
      - "5610:5601"
    # volumes:
      #   - /opt/sgdemo/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      #   - /opt/sgdemo/config/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      #   - /opt/sgdemo/config/sgdemo.yml:/usr/share/sgdemo/sgdemo.yml
      #   - /opt/sgdemo/config/sgdemo-secrets.yml:/usr/share/sgdemo/sgdemo-secrets.yml
      #   - /opt/sgdemo/config/sgdemo-users.yml:/usr/share/sgdemo/sgdemo-users.yml
      #   - /opt/sgdemo/config/sgdemo-roles.yml:/usr/share/sgdemo/sgdemo-roles.yml
      #   - /opt/sgdemo/config/sgdemo-privileges.yml:/usr/share/sgdemo/sgdemo-privileges.yml
      #   - /opt/sgdemo/config/sgdemo-permissions.yml:/usr/share/sgdemo/sgdemo-permissions.yml
      #   - /opt/sgdemo/config/sgdemo-indices.yml:/usr/share/sgdemo/sgdemo-indices.yml
      #   - /opt/sgdemo/config/sgdemo-templates.yml:/usr/share/sgdemo/sgdemo-templates.yml
      #   - /opt/sgdemo/config/sgdemo-mappings.yml:/usr/share/sgdemo/sgdemo-mappings.yml
      #   - /opt/sgdemo/config/sgdemo-settings.yml:/usr/share/sgdemo/sgdemo-settings.yml
    networks:
      - telemetry_elasticsearch

  elasticsearch:
    build:
      context: compose/elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: te_elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
      - ./compose/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    networks:
      - telemetry_elasticsearch

  logstash:
    build:
      context: compose/logstash
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: te_logstash
    volumes:
      - ./compose/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./compose/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000/tcp"
      - "5044:5044/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - telemetry_elasticsearch
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: compose/kibana
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: te_kibana
    volumes:
      - ./compose/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    networks:
      - telemetry_elasticsearch
    depends_on:
      - elasticsearch

networks:
  telemetry_elasticsearch:
    driver: bridge

volumes:
  elasticsearch:
